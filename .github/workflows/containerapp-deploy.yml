name: Maritime Container App Deployment

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_RESOURCE_GROUP: maritime-platform-rg
      AZURE_LOCATION: norwayeast
      CONTAINER_APP_NAME: maritime-platform
      ACR_NAME: maritimeplatacr
      REGISTRY_LOGIN_SERVER: maritimeplatacr.azurecr.io
      IMAGE_NAME: maritimeplat-api
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure resource group
        run: |
          az group create \
            --name "$AZURE_RESOURCE_GROUP" \
            --location "$AZURE_LOCATION" \
            --tags Environment=CI Project=MaritimePlatform

      - name: Ensure Azure Container Registry
        run: |
          if az acr show --name "$ACR_NAME" >/dev/null 2>&1; then
            az acr update --name "$ACR_NAME" --admin-enabled true
          else
            az acr create \
              --name "$ACR_NAME" \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --location "$AZURE_LOCATION" \
              --sku Standard \
              --admin-enabled true
          fi

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/docker/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Deploy Azure resources and Container App
        run: |
          bash deployment/azure/deploy-azure-interview.sh deploy \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --location "$AZURE_LOCATION" \
            --app-name "$CONTAINER_APP_NAME" \
            --unique-id cicd \
            --skip-image-build \
            --image-tag "$IMAGE_TAG"

      - name: Capture deployment summary
        run: |
          az containerapp show \
            --name "$CONTAINER_APP_NAME" \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --query "properties.configuration.ingress.fqdn" -o tsv
